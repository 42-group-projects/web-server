  ______ _ _       _____           _                    _____ _               
 │  ____(_) │     ╱ ____│         │ │                  ╱ ____│ │              
 │ │__   _│ │ ___│ (___  _   _ ___│ │_ ___ _ __ ___   │ │    │ │ __ _ ___ ___ 
 │  __│ │ │ │╱ _ ╲╲___ ╲│ │ │ ╱ __│ __╱ _ ╲ '_ ` _ ╲  │ │    │ │╱ _` ╱ __╱ __│
 │ │    │ │ │  __╱____) │ │_│ ╲__ ╲ ││  __╱ │ │ │ │ │ │ │____│ │ (_│ ╲__ ╲__ ╲
 │_│    │_│_│╲___│_____╱ ╲__, │___╱╲__╲___│_│ │_│ │_│  ╲_____│_│╲__,_│___╱___╱
                          __╱ │                                               
                         │___╱                                                                         
---------------------------------------------------------------------------------------

FILESSYSTEM USAGE:

- FileSystem::FileSystem(SafePath path)  
  Constructs a FileSystem object for a given SafePath.  
  - Checks if the file exists using stat()  
  - Sets file size, last modified time, MIME type, and file permissions (readable, writable, executable)  
  - Determines if the path is a directory  
  - If file does not exist, sets defaults: size=0, lastModified=0, mimeType=NO_FILE, isDirectory=false, readable=false, writable=false, executable=false  

- getFileContents()
  Returns the contents of the file. The string is not stored at FileSystem construction to not read files for nothing.
  Return type: const std::string  
  Usage: fileSystem.getFileContents()

- getPath()

  ⚠️ WARNING ⚠️, if the requested path leads to a directory that has an index, this path wil be changed to the index file's path,
  which shouldn't be displayed in the browser's search bar. Use the path given to FileSystem instead.
  
  Returns the SafePath object used to create the FileSystem  
  Return type: const SafePath&  
  Usage: fileSystem.getPath()

- getSize()  
  Returns the file size in bytes  
  Return type: size_t  
  Usage: fileSystem.getSize()

- getLastModified()  
  Returns the last modification time as time_t  
  Usage: fileSystem.getLastModified()

- getMimeType()  
  Returns the MIME type of the file  
  Return type: e_mimeType  
  Usage: fileSystem.getMimeType()

- exists()  
  Returns true if the file exists  
  Usage: fileSystem.exists()

- directory()  
  Returns true if the path is a directory  
  Usage: fileSystem.directory()

- readable()  
  Returns true if the file is readable  
  Usage: fileSystem.readable()

- writable()  
  Returns true if the file is writable  
  Usage: fileSystem.writable()

- executable()  
  Returns true if the file is executable  
  Usage: fileSystem.executable()

---------------------------------------------------------------------------------------
EXAMPLE:

SafePath path("/upload/file.txt", config);
FileSystem file(path);

if (file.exists()) {
    std::cout << "File size: " << file.getSize() << " bytes\n";
    std::cout << "MIME type: " << file.getMimeType() << "\n";
}
