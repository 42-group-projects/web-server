   _____        __     _____      _   _        _____ _               
  ╱ ____│      ╱ _│   │  __ ╲    │ │ │ │      ╱ ____│ │              
 │ (___   __ _│ │_ ___│ │__) │_ _│ │_│ │__   │ │    │ │ __ _ ___ ___ 
  ╲___ ╲ ╱ _` │  _╱ _ ╲  ___╱ _` │ __│ '_ ╲  │ │    │ │╱ _` ╱ __╱ __│
  ____) │ (_│ │ ││  __╱ │  │ (_│ │ │_│ │ │ │ │ │____│ │ (_│ ╲__ ╲__ ╲
 │_____╱ ╲__,_│_│ ╲___│_│   ╲__,_│╲__│_│ │_│  ╲_____│_│╲__,_│___╱___╱
                                                                                                             
---------------------------------------------------------------------------------------
SAFEPATH USAGE

- SafePath::SafePath(const std::string &path, const ServerConfig &config)  

  Constructs a SafePath object for a requested path.  
  Throws std::runtime_error if the path contains ".."  
  Resolves the full path by combining the root of the location from config[path].root with the requested path  
  Inserts a "/" between the root and requested path if the requested path does not start with "/"
  Usage: SafePath sp("path", config)

- getFullPath()  
  Returns the full resolved path including the root  
  Return type: std::string  
  Usage: sp.getFullPath()

- getRequestedPath() (!unsafe!)
  Returns the raw requested path  
  Return type: std::string  
  Usage: sp.getRequestedPath()

- operator std::string()  
  Implicit conversion to std::string (equivalent to getFullPath())  
  Return type: std::string  
  Usage: std::string resolvedPath = sp

---------------------------------------------------------------------------------------
EXAMPLE:

ServerConfig config(argc, argv);
SafePath path("/upload/file.txt", config);

std::cout << path.getRequestedPath(); // "/upload/file.txt"
std::cout << path.getFullPath();      // "/var/www/upload/file.txt" (depends on config)
std::string resolved = path;          // implicit conversion to string
